<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>objects on CS Research</title>
    <link>https://sage-csr.vercel.app/tags/objects/</link>
    <description>Recent content in objects on CS Research</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sage-csr.vercel.app/tags/objects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Objects</title>
      <link>https://sage-csr.vercel.app/basics/objects/</link>
      <pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://sage-csr.vercel.app/basics/objects/</guid>
      <description>Here is an explanation of object-oriented programming (OOP) paradigm and principles, its advantages and disadvantages, and 3 top languages that are considered pure OOP:&#xA;OOP Principles Object-oriented programming (OOP) is a programming paradigm that focuses on creating objects, which are self-contained entities that combine data (attributes) and behavior (methods). OOP principles are:&#xA;Encapsulation: Bundling data and methods together within an object, protecting internal data from unauthorized access. Inheritance: Creating new classes (subclasses) based on existing classes (superclasses), inheriting their attributes and methods.</description>
    </item>
  </channel>
</rss>
